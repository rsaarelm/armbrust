Attiny85 VGA UART transfer:
===========================

Ascii-codes 32 .. 159 (decimal) are printed on screen as-is.

CR and LF are both treated as same; cursor is placed into
the beginning of next line. If cursor is already on last line, 
screen is scrolled up.

Limited subset of ANSI escapes is supported, and also few non-standard
escape codes.

ANSI sequence begins when "Escape" 0x1B (ascii 27 / ESC) character
followed by [ character is encountered.

List of supported ANSI escapes:
-----------------------------------------------------------------------------
Move cursor location		<ESC>[#row#;#column#H	#row# = 0 .. 13
				<ESC>[#row#;#column#f	#colunn# = 0 .. 31

Leaving both values undefined moves to (0,0):
<ESC>[H is equal to <ESC>[0;0H

Moving cursor outside the specified area has undefined effect.
-----------------------------------------------------------------------------
Clear screen and move cursor	<ESC>[2J
to upper left corner (0,0)
-----------------------------------------------------------------------------
Set colors (or reset to		<ESC>[#color#;#color#m
default color). Selected
color will stay active until
reset or new color selected.

#color# = color number		Foreground	Background
	black			   30		   40
	red			   31		   41
	green			   32		   42
	yellow			   33		   43
	blue			   34		   44
	magenta			   35		   45
	cyan			   36		   46
	white			   37		   47
	reset to defaults	   0

Color command supports maximum two arguments. Suggested way is to use
value 0 only alone in a command: <ESC>[0m resets colors to default.

Example: <ESC>[34;47m activates blue text with white background color.

Using other than supported color numbers has undefined effect.
-----------------------------------------------------------------------------
Disable wrap at the end		<ESC>[?7l	(lowercase L)
of line (cursor stays
in the last column).
-----------------------------------------------------------------------------
Enable wrap at the end		<ESC>[?7h
of line (cursor advances
to next line). Default
mode.
-----------------------------------------------------------------------------


Non-standard Escape codes
-----------------------------------------------------------------------------
Reset device			<ESC>c		Resets all variables and
						reboots device. Wait 1 second
						after this command before 
						sending new data.
-----------------------------------------------------------------------------
Scroll full screen left		<ESC>D		(Notice missing [ -char)
one column, emptying last
character of every row

Scroll commands are buffered if sent before the actual scroll has commenced.
-----------------------------------------------------------------------------
Scroll row left one 		<ESC>[#row#[	#row# = 0 .. 15
column, emptying last
character on row.

Example: <ESC>[9[ scrolls row 9 (10th row) left one column.
-----------------------------------------------------------------------------
Move cursor down		<ESC>[B		Moves cursor down.
-----------------------------------------------------------------------------
Move cursor forward		<ESC>[C		Moves cursor forward.
-----------------------------------------------------------------------------
Graphics/Text-mode split	<ESC>[#row#]	#row# = 0 .. 16
						Text-mode starts from #row#
						0 = full text
						16 = full graphics
						1..15 = split screen to
						        graphics / text
-----------------------------------------------------------------------------
Tricoder mode start		<ESC>G		In tricoder mode, each byte
						is sent 3 times: 
						Red, Green and Blue value
						separately. Useful in
						graphics mode as it allows
						you to draw any pixel
						with any of the 8 colors.
-----------------------------------------------------------------------------
Tricoder mode end		<ESC>T
-----------------------------------------------------------------------------
<ESC> followed by any other character than command prints the character to 
screen buffer as-is. 

Following ascii codes need to be escaped, if you want to print them to screen:
8, 10, 13, 27, 127


